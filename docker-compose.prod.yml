# PATH: docker-compose.prod.yml

services:
  db:
    container_name: "postgres-prod"
    # En producci√≥n, usas un bind mount a una carpeta persistente
    # o un volumen externo/named. Ejemplo bind mount:
    volumes:
      - /opt/imputaciones-powersap/pgdata:/var/lib/postgresql/data
    networks:
      - proxy_net

  backend:
    build:
      args:
        SERVICE_NAME: "${SERVICE_NAME}"
        BACKEND_PORT: "${BACKEND_PORT}"
    networks:
      - proxy_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}-backend.rule=PathPrefix(`/${SERVICE_NAME}/api`)"
      - "traefik.http.routers.${SERVICE_NAME}-backend.entryPoints=websecure"
      - "traefik.http.routers.${SERVICE_NAME}-backend.tls=true"
      - "traefik.http.services.${SERVICE_NAME}-backend.loadbalancer.server.port=${BACKEND_PORT}"

  frontend:
    build:
      target: prod
      args:
        SERVICE_NAME: "${SERVICE_NAME}"
        FRONTEND_PORT: "${FRONTEND_PORT}"
        ENVIRONMENT: "production"
    networks:
      - proxy_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${SERVICE_NAME}-frontend.rule=PathPrefix(`/${SERVICE_NAME}`)"
      - "traefik.http.routers.${SERVICE_NAME}-frontend.entryPoints=websecure"
      - "traefik.http.routers.${SERVICE_NAME}-frontend.tls=true"
      - "traefik.http.services.${SERVICE_NAME}-frontend.loadbalancer.server.port=80"
  pgadmin:
    container_name: "pgadmin-prod"
    environment:
      - "PGADMIN_PROD_PORT=${PGADMIN_PROD_PORT}"
    ports:
      - "${PGADMIN_PROD_PORT}:80"
    networks:
      - proxy_net

networks:
  proxy_net:
    external: true
